/**
 * Qliro Checkout Order creation request type
 * Ideally those types should be imported from a Qliro SDK
 */
export type QliroCheckoutOrderInput = {
    /** Will be provided by Qliro Checkout when setting up merchant account */
    MerchantApiKey: string;

    /** A string generated by the merchant to identify the order uniquely in their system. Maximum length is 25 characters. */
    MerchantReference: string;

    /** Three uppercase characters, in accordance with ISO 4217. */
    Currency: string;

    /** Two upper case characters. In accordance with ISO 3166-1. */
    Country: string;

    /** Locale indicative for language & other location-specific details. */
    Language: string;

    /** A URL where the customer can find the merchant's terms and conditions. */
    MerchantTermsUrl: string;

    /** A URL where the customer can find the merchant's integrity policy. */
    MerchantIntegrityPolicyUrl?: string;

    /** A URL to where Qliro will redirect the the customer once the payment is completed. */
    MerchantConfirmationUrl: string;

    /** If specified, Qliro will use this URL to try to validate the order before completing the purchase. Should use https. */
    MerchantOrderValidationUrl?: string;

    /** Used if Qliro Checkout should handle the shipping interaction with the customer. Should use https. */
    MerchantOrderAvailableShippingMethodsUrl?: string;

    /** Qliro will use this URL to send notifications on payment status changes during the order management process. Should use https. */
    MerchantOrderManagementStatusPushUrl?: string;

    /** Qliro will use this URL to send notifications for general status updates. Should use https. */
    MerchantNotificationUrl?: string;

    /** Qliro will use this URL to send customer checkout status updates. Should use https. */
    MerchantCheckoutStatusPushUrl?: string;

    /** Qliro will use this URL to send notifications on saved merchant credit card. */
    MerchantSavedCreditCardPushUrl?: string;

    /** Used if merchant is willing to provide a list of predefined shipping addresses for customer to choose from. Should use https. */
    MerchantOrderAvailableShippingAddressesUrl?: string;

    /** Hex color code to use as primary color in Qliro Checkout. */
    PrimaryColor?: string;

    /** Hex color code to use as call to action color in Qliro Checkout. */
    CallToActionColor?: string;

    /** Hex color code to use as call to action hover color in Qliro Checkout. */
    CallToActionHoverColor?: string;

    /** Hex color code to use as background color in Qliro Checkout. Only colors with saturation <= 10% are supported. */
    BackgroundColor?: string;

    /** A pixel value to be used on corners throughout Qliro Checkout. Range: 0-1000 */
    CornerRadius?: number;

    /** A pixel value to be used on corners of buttons throughout Qliro Checkout. Range: 0-1000 */
    ButtonCornerRadius?: number;

    /** List of items customer added to the cart. */
    OrderItems: QliroOrderItem[];

    /** Customer information used to try to identify the customer without user interaction. */
    CustomerInformation?: QliroCustomerInformation;

    /** If true, Qliro Checkout will prioritize the provided address over the customer's registered one. */
    LockCustomerInformation?: boolean;

    /** If true, Qliro Checkout will prevent the customer from changing their email inside Qliro Checkout. */
    LockCustomerEmail?: boolean;

    /** If true, Qliro Checkout will prevent the customer from changing their mobile number inside Qliro Checkout. */
    LockCustomerMobileNumber?: boolean;

    /** If true, Qliro Checkout will prevent the customer from changing their personal number or organization number inside Qliro Checkout. */
    LockCustomerPersonalNumber?: boolean;

    /** If true, Qliro Checkout will prevent the customer from changing their address inside Qliro Checkout. */
    LockCustomerAddress?: boolean;

    /** Used if Qliro Checkout should handle the shipping interaction with the customer. */
    AvailableShippingMethods?: QliroShippingMethod[];

    /** If specified, only the selected juridical type will be allowed in Qliro Checkout. 'Physical' or 'Company'. */
    EnforcedJuridicalType?: 'Physical' | 'Company';

    /** If specified, the customer will have to be at least this old to complete a purchase with Qliro Checkout. Range: 0-2147483647 */
    MinimumCustomerAge?: number;

    /** If true, Qliro Checkout will ask the customer if they want to sign up for a newsletter. */
    AskForNewsletterSignup?: boolean;

    /** If true, Qliro Checkout will set signup newsletter as checked. */
    AskForNewsletterSignupChecked?: boolean;

    /** This text will replace the default AskForNewsletterSignup text shown in the checkout. Max 50 characters. */
    AskForNewsletterSignupText?: string;

    /** If used a question will be shown. */
    MerchantProvidedQuestion?: QliroMerchantQuestion;

    /** Defaults to false. If true and the order country is Sweden, the customer will be asked to verify their identity with BankID. */
    RequireIdentityVerification?: boolean;

    /** If submitted, Qliro Checkout will show this text as a sub header below the shipping header. Max 300 characters. */
    ShippingAdditionalHeader?: string;

    /** A Dictionary of fees applicable to specific payment methods */
    ApplicableFees?: QliroApplicableFees;

    /** Enables dynamic filtering of payment channels available in specific orders. Max 100 characters. */
    MerchantConstraintName?: string;

    /** If you want to show shipping options in Qliro Checkout use this section */
    ShippingConfiguration?: QliroShippingConfiguration;

    /** Merchant can send promotion and other information which can be retrieved later. Maximum 30 elements. */
    MerchantProvidedMetadata?: QliroMetadata[];

    /** This property is only relevant to certain merchants who support 3rd party pickup at stores. */
    PickupPersonDetails?: QliroPickupPersonDetails;

    /** This property is used for launching Qliro Checkout with a selected payment method/group. */
    PaymentId?: string;

    /** This property is used for creating a Cancel Payment link when opening Qliro Checkout as a Payment Link. */
    MerchantCancelUrl?: string;
};

/**
 * Order item in the cart
 */
export type QliroOrderItem = {
    /** A string generated by the merchant to identify the order item. Max 200 characters. */
    MerchantReference: string;

    /** A name or description of the order item. Max 4000 characters. */
    Description?: string;

    /** Can be 'Product', 'Discount', 'Fee' or 'Shipping' */
    Type?: 'Product' | 'Discount' | 'Fee' | 'Shipping';

    /** The number of these items in the cart. Range: 1-2147483647 */
    Quantity?: number;

    /** The price per item including Value Added Tax. Can have 0, 1 or 2 decimals. */
    PricePerItemIncVat?: number;

    /** The price per item excluding Value Added Tax. Can have 0, 1 or 2 decimals. */
    PricePerItemExVat?: number;

    /** Only available in create order and update order requests. Can be used to indicate risk or subscription items. */
    Metadata?: QliroOrderItemMetadata;

    /** Travel information for travel-related items */
    TravelInformation?: QliroTravelInformation;

    /** Ingrid integration information */
    Ingrid?: QliroIngridInfo;

    /** Shipping date information */
    ShippingDate?: QliroShippingDate;

    /** Additional attributes */
    Attributes?: string[];

    /** Item dimensions */
    Dimensions?: QliroDimensions;

    /** Whether the item is out of stock */
    OutOfStock?: boolean;

    /** Discount amount */
    Discount?: number;

    /** Additional merchant data. Max 250 characters. */
    MerchantData?: string;
};

/**
 * Order item metadata for risk assessment and subscriptions
 */
export type QliroOrderItemMetadata = {
    /** If true, order item considered as risk item. Default is false. */
    HasRisk?: boolean;

    /** Indicates that order item is a subscription if Enabled is true. */
    Subscription?: {
        Enabled?: boolean;
    };
};

/**
 * Travel information for travel-related order items
 */
export type QliroTravelInformation = {
    DepartureCountry?: string;
    DepartureCity?: string;
    DepartureIATACode?: string;
    ArrivalCountry?: string;
    ArrivalCity?: string;
    ArrivalIATACode?: string;
    StopOverCountry?: string;
    StopOverCity?: string;
    StopOverIATACode?: string;
    TravelType?: string;
    BookingDate?: string;
    DepartureDate?: string;
    ReturnDate?: string;
    DaysToDeparture?: number;
    NoOfPassengers?: number;
    Travelers?: QliroTraveler[];
};

/**
 * Individual traveler information
 */
export type QliroTraveler = {
    FirstName?: string;
    LastName?: string;
    IsMainTraveller?: boolean;
    Gender?: object;
    DateOfBirth?: string;
    Class?: string;
    Airline?: string;
    NoOfLuggage?: number;
};

/**
 * Ingrid integration information
 */
export type QliroIngridInfo = {
    Weight?: number;
    Sku?: string;
};

/**
 * Shipping date range
 */
export type QliroShippingDate = {
    Start?: string;
    End?: string;
};

/**
 * Item dimensions
 */
export type QliroDimensions = {
    Height?: number;
    Length?: number;
    Width?: number;
};

/**
 * Customer information for identification
 */
export type QliroCustomerInformation = {
    /** A national identification number to identify the customer. Max 50 characters. */
    PersonalNumber?: string;

    /** A VAT number of the customer. Max 50 characters. */
    VatNumber?: string;

    /** The customer's email address. Max 255 characters. */
    Email?: string;

    /** 'Physical' or 'Company'. If 'Company', PersonalNumber will be interpreted as organization number. */
    JuridicalType?: 'Physical' | 'Company';

    /** The customer's mobile number. Max 50 characters. */
    MobileNumber?: string;

    /** The customer's date of birth. Can provide if PersonalNumber is null and JuridicalType is Physical. */
    DateOfBirth?: string;

    /** The customer's address. For B2B customers, treat this as billing address. */
    Address?: QliroAddress;

    /** The customer's shipping address for B2B customers. */
    ShippingAddress?: QliroAddress;
};

/**
 * Address information
 */
export type QliroAddress = {
    /** The first name of a physical customer's address. Max 100 characters. */
    FirstName?: string;

    /** The last name of a physical customer's address. Max 100 characters. */
    LastName?: string;

    /** Address holder's company name, only applicable for Company Customers. Max 100 characters. */
    CompanyName?: string;

    /** The street name and number of the address. Max 100 characters. */
    Street?: string;

    /** The secondary address line for apartment, suite, etc. Max 40 characters. */
    Street2?: string;

    /** The postal code of the address. Max 15 characters. */
    PostalCode?: string;

    /** The city of the address. Max 100 characters. */
    City?: string;

    /** Used if the addressee doesn't have a standard address. Max 100 characters. */
    CareOf?: string;

    /** The State/Province/Region of the address. Max 100 characters. */
    Area?: string;

    /** Geographical area code in ISO3166-2 format. Max 10 characters. */
    AreaCode?: string;
};

/**
 * Shipping method configuration
 */
export type QliroShippingMethod = {
    /** A string generated by the merchant to identify the shipping method uniquely. Max 450 characters. */
    MerchantReference?: string;

    /** Override for shipping fee merchant reference. Max 450 characters. */
    ShippingFeeMerchantReference?: string;

    /** The name of the shipping method, presented to the customer. Max 100 characters. */
    DisplayName?: string;

    /** Array of descriptions, max 200 characters per line and up to 3 lines. */
    Descriptions?: string[];

    /** A brand connected to the shipping method. Max 50 characters. */
    Brand?: string;

    /** The price including Value Added Tax. Can have 0, 1 or 2 decimals. */
    PriceIncVat?: number;

    /** The price excluding Value Added Tax. Can have 0, 1 or 2 decimals. */
    PriceExVat?: number;

    /** Use when updating price to show old price. */
    OriginalPrice?: number;

    /** If true, a field will be presented for access code entry. Max 50 characters. */
    SupportsAccessCode?: boolean;

    /** If true, requests secondary options on selection. */
    SupportsDynamicSecondaryOptions?: boolean;

    /** Array of additional options for the shipping method. */
    SecondaryOptions?: QliroShippingSecondaryOption[];

    /** Estimated delivery date of the order. */
    DeliveryDate?: string;

    /** Can be used to group shipping methods. Max 50 characters. */
    CategoryDisplayName?: string;

    /** To be used with categories. Max 50 characters. */
    LabelDisplayName?: string;

    /** Delivery date information */
    DeliveryDateInfo?: QliroDeliveryDateInfo;

    /** Use to mark a shipping method as eco friendly. */
    IsEcoFriendly?: boolean;

    /** Use to mark a shipping method with labels. */
    OptionLabels?: QliroShippingOptionLabel[];
};

/**
 * Secondary shipping options
 */
export type QliroShippingSecondaryOption = {
    /** A string generated by the merchant to identify the shipping option. Max 450 characters. */
    MerchantReference?: string;

    /** User friendly title of the shipping option. Max 100 characters. */
    DisplayName?: string;

    /** City of delivery. Max 450 characters. */
    City?: string;

    /** Address of delivery. Max 450 characters. */
    Address?: string;

    /** Postal code of delivery. Max 100 characters. */
    PostalCode?: string;

    /** User friendly description of the shipping option. */
    Descriptions?: string[];

    /** Geographical location of delivery. */
    Coordinates?: QliroCoordinates;

    /** Delivery date information */
    DeliveryDateInfo?: QliroDeliveryDateInfo;

    /** Additional shipping services available for this option. */
    AdditionalShippingServices?: QliroAdditionalShippingService[];

    /** Estimated delivery date override. */
    DeliveryDate?: string;
};

/**
 * Geographical coordinates
 */
export type QliroCoordinates = {
    /** Latitude expressed as decimal */
    Lat?: number;

    /** Longitude expressed as decimal */
    Lng?: number;
};

/**
 * Delivery date information
 */
export type QliroDeliveryDateInfo = {
    /** Estimated delivery start date. If older than today, will be ignored. */
    DateStart?: string;

    /** Estimated delivery end date. If older than today, will be ignored. */
    DateEnd?: string;

    /** Display type for the delivery date. Default is 'date'. */
    Unit?: object;
};

/**
 * Additional shipping services
 */
export type QliroAdditionalShippingService = {
    /** Merchant reference for the additional service. Max 450 characters. */
    MerchantReference?: string;

    /** Name of the additional shipping service. Max 100 characters. */
    DisplayName?: string;

    /** Array of descriptions, max 100 characters per line and up to 3 lines. */
    Descriptions?: string[];

    /** Price excluding VAT. Can have 0, 1 or 2 decimals. */
    PriceExVat?: number;

    /** Price including VAT. Can have 0, 1 or 2 decimals. */
    PriceIncVat?: number;

    /** Estimated delivery date override with this service selected. */
    DeliveryDate?: string;

    /** Delivery date information */
    DeliveryDateInfo?: QliroDeliveryDateInfo;
};

/**
 * Shipping option labels
 */
export type QliroShippingOptionLabel = {
    /** The name of the shipping option label. Max 50 characters. */
    Name?: string;

    /** The display type of the shipping option label. Max 50 characters. */
    DisplayType?: string;
};

/**
 * Merchant provided question
 */
export type QliroMerchantQuestion = {
    Text?: string;
    Checked?: boolean;
};

/**
 * Applicable fees configuration
 */
export type QliroApplicableFees = {
    /** Dictionary of payment method names to arrays of fees */
    Fees?: Record<string, object[]>;
};

/**
 * Shipping configuration for integrated providers
 */
export type QliroShippingConfiguration = {
    /** Unifaun integration configuration */
    Unifaun?: QliroUnifaunConfig;

    /** Additional tags for shipping providers. Max 20 tags. */
    Tags?: object;
};

/**
 * Unifaun integration configuration
 */
export type QliroUnifaunConfig = {
    /** Checkout id of the unifaun checkout created with Qliro's template */
    CheckoutId?: string;
};

/**
 * Merchant provided metadata
 */
export type QliroMetadata = {
    /** Metadata element key. Max 50 characters. */
    Key?: string;

    /** Metadata element value. Max 250 characters. */
    Value?: string;
};

/**
 * Pickup person details for 3rd party pickup
 */
export type QliroPickupPersonDetails = {
    /** Pickup person's first name. Max 100 characters. */
    FirstName?: string;

    /** Pickup person's last name. Max 100 characters. */
    LastName?: string;

    /** Pickup person's phone number in international format. Max 50 characters. */
    Mobile?: string;

    /** Pickup person's email. Max 255 characters. */
    Email?: string;
};


// -- 

export type QliroCheckoutOrder = {
    OrderId: number;
    MerchantReference: string;
    TotalPrice: number;
    Currency: string;
    Country: string;
    Language: string;
    CustomerCheckoutStatus: string;
    CustomerVerifiedEmail: {
        UpdateVerifiedEmailLink: string;
        VerifiedEmail: string;
        VerifiedEmailDiffers: boolean;
    };
    Customer: {
        FirstName: string;
        LastName: string;
        PersonalNumber: string;
        VatNumber: string;
        Email: string;
        MobileNumber: string;
        JuridicalType: number;
        DateOfBirth: string;
        Gender: number;
    };
    BillingAddress: Address;
    ShippingAddress: Address;
    OrderItems: OrderItemResponse[];
    PaymentMethod: {
        PaymentMethodName: string;
        PaymentTypeCode: string;
    };
    SignupForNewsletter: boolean;
    AskForNewsletterSignupChecked: boolean;
    IdentityVerification: {
        RequireIdentityVerification: boolean;
        IdentityVerified: boolean;
    };
    MerchantProvidedMetadata: {
        Key: string;
        Value: string;
    }[];
    OrderHtmlSnippet: string;
    Upsell: {
        IsUpsellOrder: boolean;
        EligibleForUpsell: boolean;
        UpsellTotalPrice: number;
        EligibleForUpsellUntil: string;
    };
    MerchantSavedCreditCard: {
        Id: string;
        BrandName: number;
        ExpiryYear: number;
        ExpiryMonth: number;
        Bin: string;
        Last4Digits: string;
        MaskedNumber: string;
    };
    MerchantProvidedQuestionAnswer: boolean;
    PaymentLink: string;
};

type Address = {
    FirstName: string;
    LastName: string;
    CompanyName: string;
    CareOf: string;
    Street: string;
    Street2: string;
    PostalCode: string;
    City: string;
    CountryCode: string;
    Area: string;
    AreaCode: string;
};

type OrderItemResponse = {
    MerchantReference: string;
    Description: string;
    Quantity: number;
    PricePerItemIncVat: number;
    PricePerItemExVat: number;
    Type: number;
    Metadata: {
        ShippingMethodMerchantReference: string;
        ShippingMethodSecondaryOptionMerchantReference: string;
        ShippingMethodAccessCode: string;
        AdditionalShippingProperties: {
            ShippingProvider: string;
            ServiceId: string;
            Agent: {
                Id: string;
                Name: string;
                MapLongitude: number;
                MapLatitude: number;
                Address1: string;
                Address2: string;
                ZipCode: string;
                City: string;
            };
        };
        MerchantData: string;
    };
    PaymentTransactionId: number;
};
